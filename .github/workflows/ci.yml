name: CI Pipeline

on: [push, pull_request, workflow_dispatch]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential valgrind
        
    - name: Compile with debug symbols
      run: g++ -std=c++17 -g -O0 main.cpp -o main
      
    - name: Run with Valgrind
      run: |
        valgrind --leak-check=full --track-origins=yes --error-exitcode=1 --log-file=valgrind_report.txt ./main
        VALGRIND_EXIT=$?
        
        if [ $VALGRIND_EXIT -ne 0 ]; then
          echo "::error::Valgrind found memory issues!"
          echo "Full Valgrind report:"
          cat valgrind_report.txt
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "VALGRIND_ERRORS=1" >> $GITHUB_ENV
          fi
          
          exit 1
        fi
        
    - name: Run normally
      run: |
        ./main > run_output.txt 2>&1
        echo "Exit code: $?"
        cat run_output.txt
        
    - name: Validate results
      run: |
        python3 result_checker.py > validation_output.txt 2>&1 || (cat validation_output.txt && exit 1)
        cat validation_output.txt
        
    - name: Upload Valgrind report
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: valgrind-report-${{ github.run_id }}
        path: valgrind_report.txt
        
    - name: Comment PR with Valgrind errors
      if: ${{ env.VALGRIND_ERRORS == '1' }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          try {
            const report = fs.readFileSync('valgrind_report.txt', 'utf8');
            const body = `## ⚠️ Valgrind Memory Check Report\n\nValgrind обнаружил проблемы с памятью:\n\`\`\`\n${report}\n\`\`\``;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
          } catch (error) {
            console.error("Error creating PR comment:", error);
          }
        
    - name: Save all outputs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ci-outputs-${{ github.run_id }}
        path: |
          run_output.txt
          validation_output.txt
          valgrind_report.txt
          result.json
